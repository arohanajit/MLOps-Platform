version: '3.8'

services:
  # PostgreSQL for Feature Registry and Feature Store
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: mlops
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlops
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mlops"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for Feature Store (online storage)
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Feature Registry API
  feature-registry:
    build:
      context: ./src/feature_registry
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: mlops
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlops
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    command: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./src/feature_registry:/app

  # Feature Store API
  feature-store:
    build:
      context: ./src/feature_store
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: mlops
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlops
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOG_LEVEL: INFO
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./src/feature_store:/app

volumes:
  postgres_data:
  redis_data: 