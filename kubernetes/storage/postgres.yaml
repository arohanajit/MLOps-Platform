apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: storage
data:
  init-schemas.sql: |
    -- This will be executed on startup to initialize schemas
    \connect mlopsdb
    \i /docker-entrypoint-initdb.d/initialize_schemas.sql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: storage
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.3
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: password
        - name: POSTGRES_DB
          value: mlopsdb
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        # Optimized PostgreSQL configuration for resource constraints
        - name: POSTGRES_INITDB_ARGS
          value: "--data-checksums"
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "md5"
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
      volumes:
      - name: init-scripts
        configMap:
          name: postgres-init
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: storage
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  clusterIP: None
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: storage
type: Opaque
data:
  username: cG9zdGdyZXM=  # postgres
  password: bWxvcHMtcG9zdGdyZXMtcGFzc3dvcmQ=  # mlops-postgres-password 